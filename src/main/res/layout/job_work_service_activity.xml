<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
	xmlns:android="http://schemas.android.com/apk/res/android"
	android:layout_width="match_parent"
	android:layout_height="match_parent"
	android:gravity="center_horizontal"
	android:orientation="vertical"
	android:padding="8dp">

	<TextView
		android:layout_width="match_parent"
		android:layout_height="wrap_content"
		android:paddingBottom="8dp"
		android:text="@string/job_work_service_controller"
		android:textAppearance="?android:attr/textAppearanceMedium"/>

	<Button
		android:id="@+id/enqueue1"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:text="@string/enqueue1_job">

		<requestFocus/>
	</Button>

	<Button
		android:id="@+id/enqueue2"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:text="@string/enqueue2_job">
	</Button>

	<Button
		android:id="@+id/kill"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:text="@string/kill_process">
	</Button>

	<!-- New buttons - jobs that use networking

	Not needed, the bug is somewhere else, see JobWorkService.dequeueThenProcess

	-->

	<LinearLayout
		android:layout_width="match_parent"
		android:layout_height="wrap_content"
		android:orientation="vertical"
		android:visibility="gone">

		<Button
			android:id="@+id/enqueue_network1"
			android:layout_width="wrap_content"
			android:layout_height="wrap_content"
			android:text="@string/enqueue_network1_job">

			<requestFocus/>
		</Button>

		<Button
			android:id="@+id/enqueue_network2"
			android:layout_width="wrap_content"
			android:layout_height="wrap_content"
			android:text="@string/enqueue_network2_job">
		</Button>

	</LinearLayout>

</LinearLayout>
